Knowledge summary
1.git是先进的分布式版本控制系统
2.第一次安装git需要设置：
  git config —-global user.name “xxx”
  git config —-global user.email “xxx”
  （—-global参数表示此计算机上的所有git仓库都会使用这个配置）
3.创建版本库：
  a.最好创建一个空的目录，也可以选择已有文件的目录（不要包含中文）
  b.通过git init命令把该目录变成git可以管理的仓库
4.git分布式版本管理系统包括两个区：
  一.工作区（Working directory）：
    电脑里能看到的目录（不包括隐藏目录版本库.git）
  二.版本库（Repository）
    a.暂存区（stage/index）
    b.分支（master）
5.添加文件到版本库：
  a.git add <file>：把工作区的文件放入暂存区（stage），可反复使用添加多个文件
  b.git commit -m “xxx”：一次性把stage中的文件全部提交到分支中（master），“xxx”内容为本次提交的注释说明
6.git status：查看当前仓库的状态
7.git diff：查看working中版本与stage中版本的差异，也就是正在编辑中文件，与最后一次add版本作对比，一般在add前使用
8.git diff —-cached/staged：查看stage中版本与master中的HEAD版本间差异，也就是最后一次add版本与最后一次commit版本作对比，一般在commit前使用
9.git diff HEAD：查看working中版本与master中的HEAD版本间差异，还未add版本与最后一次commit版本作对比
10.git diff —-stat：查看简单对比结果，可以添加—-stat参数（查看哪些文件被改动）
11.git log：查看提交历史记录（—-pretty=oneline参数可以简化记录信息）
12.git reflog：查看命令历史记录
13.git reset —-hard HEAD^：回到上一个版本（此处的版本都为master中的版本，可以直接写版本号）
14.git checkout —- <file>：撤销working版本的修改，还原成master中的HEAD版本
15.git reset HEAD <file>：可以消除stage中的版本（如果把HEAD换成HEAD^则会把HEAD^的版本替换进stage中）
16.删除版本：
  a.git rm <file>：删除working中的版本并提交到stage（手动删除working中版本时也可用git add <file>）
  b.git commit -m “xxx”：删除master中的版本
  
  